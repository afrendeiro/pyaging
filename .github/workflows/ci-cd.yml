name: Python package workflow

on:
  push:
    branches:
      - main
    paths:
      - 'pyproject.toml'
      - 'tutorials/**'
      - 'docs/**'
      - 'pyaging/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Check for version change
      id: version-check
      run: |
        VERSION=$(grep "version =" pyproject.toml | cut -d'"' -f2)
        echo "Current version: $VERSION"
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*
        LAST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        echo "Last version: $LAST_TAG"
        if [[ "$VERSION" != *"$LAST_TAG"* ]]; then
          echo "Version change detected, proceeding with the workflow..."
          echo "VERSION_CHANGED=true" >> $GITHUB_ENV
        else
          echo "No version change detected, stopping the workflow."
          echo "VERSION_CHANGED=false" >> $GITHUB_ENV
        fi
      shell: bash

    - if: env.VERSION_CHANGED == 'true'
      name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install

    - if: env.VERSION_CHANGED == 'true'
      name: Run Notebooks
      run: |
        poetry run pytest --nbmake tutorials/

    - if: env.VERSION_CHANGED == 'true'
      name: Build Package
      run: |
        poetry build

    - if: env.VERSION_CHANGED == 'true'
      name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

    - if: env.VERSION_CHANGED == 'true'
      name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
